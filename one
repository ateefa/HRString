from math import fabs
def number_needed(a, b):
	letterArray = [0] * 26
	for c in a:
		index = ord(c) - ord('a');
		letterArray[index]+=1
	for c in b:
		index = ord(c) - ord('a')
		letterArray[index]-=1
	result = 0
	for i in letterArray:
		result += fabs(i)
	return int(result)
    
a = input()
b = input()

print (number_needed(a, b))
# def substrCount(n, s):
#     l = []
#     count = 0
#     cur = None
# # 1st pass
#     for i in range(n):
#         if s[i] == cur:
#             count += 1
#         else:
#             if cur is not None:
#                 l.append((cur, count))
#             cur = s[i]
#             count = 1
#     l.append((cur, count))
#     ans = 0
		
# # 2nd pass
#     for i in l:
#         ans += (i[1] * (i[1] + 1)) // 2

# # 3rd pass
#     for i in range(1, len(l) - 1):
#         if l[i - 1][0] == l[i + 1][0] and l[i][1] == 1:
#             ans += min(l[i - 1][1], l[i + 1][1])

#     return ans

# n = int(input())
# s = input()
# result,l = substrCount(n, s)

# print(str(result) + '\n') 



# # Complete the alternatingCharacters function below.
# def alternatingCharacters(s):
# 	count=0
# 	prev=str()
# 	for i in range(1,len(s)):
# 		prev=s[i-1]
# 		if s[i]==prev:
# 			count+=1
# 	return count
# q = int(input())
# for q_itr in range(q):
#   s = input()
#   result = alternatingCharacters(s)
#   print(str(result) + '\n')
